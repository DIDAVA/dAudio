/*!
 * dAudio.js v1.0.0
 * (c) 2019 DIDAVA Media
 * Released under the MIT License.
 * https://www.didava.ir
 * https://github.com/DIDAVA/dAudio
 */
const AudioContext=window.AudioContext||window.webkitAudioContext;function dAudio(){const e={src:null,state:null,isPlaying:!1,autoplay:!1,startedAt:0,pausedAt:0,buffer:null,type:null,size:0,repeat:!1,normalizer:1,threshold:0,ratio:1,knee:40,remaster:!1};["state","load","offline","online","ready","play","pause","stop","end"].forEach(e=>this[`on${e}`]=null);const t=(a,n=0,o=null)=>{e.state=a,"function"==typeof this.onstate&&this.onstate({state:a,code:n,message:o}),"function"==typeof this[`on${a}`]&&this[`on${a}`](),"ready"===a&&e.autoplay&&(t("autoplay"),c()),"end"===a&&e.repeat&&(t("repeat"),c())},a=new AudioContext,n=a.createGain(),o=a.createDynamicsCompressor();o.attack.value=o.attack.maxValue,o.release.value=o.release.maxValue/2;const r=a.createGain();n.connect(o).connect(r).connect(a.destination);const s=t=>{n.gain.value=t?e.normalizer:n.gain.defaultValue,o.threshold.value=t?e.threshold:o.threshold.maxValue,o.ratio.value=t?e.ratio:o.ratio.minValue,o.knee.value=t?e.knee:o.knee.maxValue,e.remaster=t,console.log("Remaster",{n:e.normalizer,t:e.threshold,r:e.ratio,k:e.knee})};s(e.remaster);const u=(e,t,a)=>(e>a?e=a:e<t&&(e=t),e),l=()=>e.pausedAt?e.pausedAt:e.startedAt?a.currentTime-e.startedAt:0;let i=null;const d=()=>{i.stop(),i.disconnect(n),i=null,e.isPlaying=!1},p=(a=!1)=>{a||t("stop"),i&&d(),e.startedAt=0,e.pausedAt=0},f=(n=!1)=>{i&&(n||t("pause"),d(),e.pausedAt=a.currentTime-e.startedAt)},c=(o=!1)=>{i||(o||t("play"),(i=a.createBufferSource()).connect(n),i.buffer=e.buffer,i.start(0,e.pausedAt),e.startedAt=a.currentTime-e.pausedAt,e.pausedAt=0,e.isPlaying=!0,i.onended=()=>{l()>=e.buffer.duration&&(p(),t("end"))})},m=r=>{t("decode"),a.decodeAudioData(r,a=>{e.buffer=a,(()=>{t("remaster");let a=0,r=0,l=0;for(let t=0;t<e.buffer.numberOfChannels;t++)e.buffer.getChannelData(t).forEach(e=>{a+=e>0?e:-e,e>r?r=e:-e>r&&(r=-e)});l=a/(e.buffer.length/e.buffer.numberOfChannels),e.normalizer=parseFloat((2*n.gain.defaultValue-r).toFixed(2));const i=(n.gain.defaultValue-l)*(o.threshold.minValue/2),d=o.ratio.maxValue-l*o.ratio.maxValue,f=o.knee.maxValue-l*(o.knee.maxValue/2);e.threshold=Math.floor(u(i,o.threshold.minValue,o.threshold.maxValue)),e.ratio=Math.ceil(u(d,o.ratio.minValue,o.ratio.maxValue)),e.knee=Math.floor(u(f,o.knee.minValue,o.knee.maxValue)),s(!0),p(!0),t("ready")})()},e=>{console.log("dAudio Error:",e.message)})},y=()=>e.type.match(/^audio\/[a-z0-9]+$/),h=()=>e.size>0;Object.defineProperties(dAudio.prototype,{state:{enumerable:!0,get:()=>e.state},src:{enumerable:!0,get:()=>e.src,set(a){(a=>{if(t("load"),a instanceof File)t("offline"),e.src=a.name,e.type=a.type,e.size=a.size,y()&&h()?a.arrayBuffer().then(e=>m(e)):t("error",1,"Invalid Audio File");else if("string"==typeof a){t("online");const n=new XMLHttpRequest;n.responseType="arraybuffer",n.onreadystatechange=()=>{n.status>=400?n.abort():n.readyState===n.HEADERS_RECEIVED&&(e.type=n.getResponseHeader("content-type"),e.size=parseInt(n.getResponseHeader("content-length")),y()&&h()||n.abort())},n.onload=()=>{e.src=a,m(n.response)},n.onabort=()=>t("error",2,"Loading Aborted"),n.open("GET",a,!0),n.send()}})(a)}},type:{enumerable:!0,get:()=>e.type},size:{enumerable:!0,get:()=>e.size},duration:{enumerable:!0,get:()=>e.buffer?e.buffer.duration:0},currentTime:{enumerable:!0,get:()=>l(),set(a){var n;"number"==typeof a&&(n=u(a,0,this.duration),t("seek"),i?(f(!0),e.pausedAt=n,c(!0)):e.pausedAt=n)}},isPlaying:{enumerable:!0,get:()=>e.isPlaying},repeat:{enumerable:!0,get:()=>e.repeat,set(t){"boolean"==typeof t&&(e.repeat=t)}},autoplay:{enumerable:!0,get:()=>e.autoplay,set(t){"boolean"==typeof t&&(e.autoplay=t)}},remaster:{enumerable:!0,get:()=>e.remaster,set(e){"boolean"==typeof e&&s(e)}},volume:{enumerable:!0,get:()=>r.gain.value,set(e){"number"==typeof e&&(r.gain.value=u(e,0,1))}}}),dAudio.prototype.play=function(){c()},dAudio.prototype.pause=function(){f()},dAudio.prototype.stop=function(){p()},dAudio.prototype.playPause=function(){i?f():c()}}