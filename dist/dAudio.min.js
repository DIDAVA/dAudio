/*!
 * dAudio.js v1.0.0
 * (c) 2019 DIDAVA Media
 * Released under the MIT License.
 * https://www.didava.ir
 * https://github.com/DIDAVA/dAudio
 */
function dAudio(e=null){let t=null,o=null,n=0,a=0,r=null,u=null,i=0,s=1,l=0,p=1,d=40,c="boolean"!=typeof e.remaster||e.remaster,f="string"==typeof e.src?e.src:"",y="boolean"==typeof e.autoplay&&e.autoplay,m="boolean"==typeof e.repeat&&e.repeat;["state","init","load","offline","online","decode","remaster","ready","play","pause","stop","end","autoplay","repeat","error"].forEach(t=>{const o=`on${t}`;"function"==typeof e[o]&&(this[o]=e[o])});const b=(e,t=0,n="OK")=>{o=e;const a={name:e,code:t,message:n};"function"==typeof this.onstate&&this.onstate(a),"function"==typeof this[`on${e}`]&&this[`on${e}`](a),"ready"===e&&y&&(b("autoplay"),G()),"end"===e&&m&&(b("repeat"),G())};b("init"),["function"==typeof AudioContext,"function"==typeof AudioBufferSourceNode,"function"==typeof AudioDestinationNode,"function"==typeof GainNode,"function"==typeof DynamicsCompressorNode].includes(!1)&&b("error",1,"Incompatible Browser");const g=new AudioContext,h=g.createGain(),A=g.createDynamicsCompressor();A.attack.value=1,A.release.value=.25,A.threshold.value=0,A.ratio.value=1,A.knee.value=40;const v=g.createGain();h.connect(A).connect(v).connect(g.destination);const C=e=>{b("decode"),g.decodeAudioData(e,e=>{r=e,D()},e=>b("error",2,"Unsupported Audio Codec"))},E=e=>{h.gain.value=e?s:1,A.threshold.value=e?l:0,A.ratio.value=e?p:1,A.knee.value=e?d:40,c=e},D=()=>{b("remaster");let e=0,t=0,o=0,n=r.numberOfChannels;for(let o=0;o<n;o++)r.getChannelData(o).forEach(o=>{e+=o>0?o:-o,o>t?t=o:-o>t&&(t=-o)});o=e/(r.length/n),s=parseFloat((2-t).toFixed(2)),l=Math.floor(I(-50*(1-o),-100,0)),p=Math.ceil(I(20-20*o,1,20)),d=Math.floor(I(40-20*o,0,40)),E(c),k(!0),b("ready")},F=()=>u.match(/^audio\/[a-z0-9]+$/),T=()=>i>0,I=(e,t,o)=>(e>o?e=o:e<t&&(e=t),e),N=()=>a||(n?g.currentTime-n:0),R=()=>{t.stop(),t.disconnect(h),t=null},k=(e=!1)=>{e||b("stop"),t&&R(),n=0,a=0},B=(e=!1)=>{t&&(e||b("pause"),R(),a=g.currentTime-n)},G=(e=!1)=>{!t&&r&&(e||b("play"),(t=g.createBufferSource()).connect(h),t.buffer=r,t.start(0,a),n=g.currentTime-a,a=0,t.onended=()=>{N()>=r.duration&&(k(),b("end"))})};Object.defineProperties(dAudio.prototype,{state:{enumerable:!0,get:()=>o},src:{enumerable:!0,get:()=>f,set(e){(e=>{b("load");if(e instanceof File)b("offline"),f=e.name,u=e.type,i=e.size,F()&&T()?e.arrayBuffer().then(e=>C(e)):b("error",3,"Invalid Audio File");else if("string"==typeof e){b("online");const t=new XMLHttpRequest;t.responseType="arraybuffer",t.onreadystatechange=()=>{t.status>=400?(t.abort(),b("error",4,"Audio File Not Found")):t.readyState===t.HEADERS_RECEIVED&&(u=t.getResponseHeader("content-type"),i=parseInt(t.getResponseHeader("content-length")),F()&&T()||(t.abort(),b("error",3,"Invalid Audio File")))},t.onload=()=>{f=e,C(t.response)},t.open("GET",e,!0),t.send()}})(e)}},type:{enumerable:!0,get:()=>u},size:{enumerable:!0,get:()=>i},duration:{enumerable:!0,get:()=>r?r.duration:0},currentTime:{enumerable:!0,get:()=>N(),set(e){var o;"number"==typeof e&&(o=I(e,0,this.duration),b("seek"),t?(B(!0),a=o,G(!0)):a=o)}},isPlaying:{enumerable:!0,get:()=>!!t},repeat:{enumerable:!0,get:()=>m,set(e){"boolean"==typeof e&&(m=e)}},autoplay:{enumerable:!0,get:()=>y,set(e){"boolean"==typeof e&&(y=e)}},remaster:{enumerable:!0,get:()=>c,set(e){"boolean"==typeof e&&E(e)}},volume:{enumerable:!0,get:()=>v.gain.value,set(e){"number"==typeof e&&(v.gain.value=I(e,0,1))}}}),dAudio.prototype.play=function(){G()},dAudio.prototype.pause=function(){B()},dAudio.prototype.stop=function(){k()},dAudio.prototype.playPause=function(){t?B():G()},f&&(this.src=f)}