/*!
 * dAudio.js v1.0.0
 * (c) 2019 DIDAVA Media
 * Released under the MIT License.
 * https://www.didava.ir
 * https://github.com/DIDAVA/dAudio
 */
const AudioContext=window.AudioContext||window.webkitAudioContext;function dAudio(){const e={src:null,state:null,isPlaying:!1,autoplay:!1,startedAt:0,pausedAt:0,buffer:null,type:null,size:0,repeat:!1,normalizer:1,threshold:0,ratio:1,knee:40,remaster:!0};["state","load","offline","online","ready","play","pause","stop","end"].forEach(e=>this[`on${e}`]=null);const t=(a,o=0,n=null)=>{e.state=a,"function"==typeof this.onstate&&this.onstate({state:a,code:o,message:n}),"function"==typeof this[`on${a}`]&&this[`on${a}`](),"ready"===a&&e.autoplay&&(t("autoplay"),g()),"end"===a&&e.repeat&&(t("repeat"),g())},a=new AudioContext,o=a.createGain(),n=a.createDynamicsCompressor();n.attack.value=1,n.release.value=.5;const r=a.createGain();o.connect(n).connect(r).connect(a.destination);const s=o=>{t("decode"),a.decodeAudioData(o,t=>{e.buffer=t,l()},e=>{console.log("dAudio Error:",e.message)})},u=t=>{o.gain.value=t?e.normalizer:1,n.threshold.value=t?e.threshold:0,n.ratio.value=t?e.ratio:1,n.knee.value=t?e.knee:40,e.remaster=t,console.log("Remaster",{n:e.normalizer,t:e.threshold,r:e.ratio,k:e.knee})};u(e.remaster);const l=()=>{t("remaster");let a=0,o=0,n=0,r=e.buffer.numberOfChannels;for(let t=0;t<r;t++)e.buffer.getChannelData(t).forEach(e=>{a+=e>0?e:-e,e>o?o=e:-e>o&&(o=-e)});n=a/(e.buffer.length/r),e.normalizer=parseFloat((2-o).toFixed(2)),e.threshold=Math.floor(p(-50*(1-n),-100,0)),e.ratio=Math.ceil(p(20-20*n,1,20)),e.knee=Math.floor(p(40-20*n,0,40)),u(!0),m(!0),t("ready")},i=()=>e.type.match(/^audio\/[a-z0-9]+$/),d=()=>e.size>0,p=(e,t,a)=>(e>a?e=a:e<t&&(e=t),e);let f=null;const c=()=>e.pausedAt?e.pausedAt:e.startedAt?a.currentTime-e.startedAt:0,y=()=>{f.stop(),f.disconnect(o),f=null,e.isPlaying=!1},m=(a=!1)=>{a||t("stop"),f&&y(),e.startedAt=0,e.pausedAt=0},b=(o=!1)=>{f&&(o||t("pause"),y(),e.pausedAt=a.currentTime-e.startedAt)},g=(n=!1)=>{!f&&e.buffer&&(n||t("play"),(f=a.createBufferSource()).connect(o),f.buffer=e.buffer,f.start(0,e.pausedAt),e.startedAt=a.currentTime-e.pausedAt,e.pausedAt=0,e.isPlaying=!0,f.onended=()=>{c()>=e.buffer.duration&&(m(),t("end"))})};Object.defineProperties(dAudio.prototype,{state:{enumerable:!0,get:()=>e.state},src:{enumerable:!0,get:()=>e.src,set(a){(a=>{if(t("load"),a instanceof File)t("offline"),e.src=a.name,e.type=a.type,e.size=a.size,i()&&d()?a.arrayBuffer().then(e=>s(e)):t("error",1,"Invalid Audio File");else if("string"==typeof a){t("online");const o=new XMLHttpRequest;o.responseType="arraybuffer",o.onreadystatechange=()=>{o.status>=400?o.abort():o.readyState===o.HEADERS_RECEIVED&&(e.type=o.getResponseHeader("content-type"),e.size=parseInt(o.getResponseHeader("content-length")),i()&&d()||o.abort())},o.onload=()=>{e.src=a,s(o.response)},o.onabort=()=>t("error",2,"Loading Aborted"),o.open("GET",a,!0),o.send()}})(a)}},type:{enumerable:!0,get:()=>e.type},size:{enumerable:!0,get:()=>e.size},duration:{enumerable:!0,get:()=>e.buffer?e.buffer.duration:0},currentTime:{enumerable:!0,get:()=>c(),set(a){var o;"number"==typeof a&&(o=p(a,0,this.duration),t("seek"),f?(b(!0),e.pausedAt=o,g(!0)):e.pausedAt=o)}},isPlaying:{enumerable:!0,get:()=>e.isPlaying},repeat:{enumerable:!0,get:()=>e.repeat,set(t){"boolean"==typeof t&&(e.repeat=t)}},autoplay:{enumerable:!0,get:()=>e.autoplay,set(t){"boolean"==typeof t&&(e.autoplay=t)}},remaster:{enumerable:!0,get:()=>e.remaster,set(e){"boolean"==typeof e&&u(e)}},volume:{enumerable:!0,get:()=>r.gain.value,set(e){"number"==typeof e&&(r.gain.value=p(e,0,1))}}}),dAudio.prototype.play=function(){g()},dAudio.prototype.pause=function(){b()},dAudio.prototype.stop=function(){m()},dAudio.prototype.playPause=function(){f?b():g()}}