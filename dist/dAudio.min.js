/*!
 * dAudio.js v1.0.0
 * (c) 2019 DIDAVA Media
 * Released under the MIT License.
 * https://www.didava.ir
 * https://github.com/DIDAVA/dAudio
 */
const AudioContext=window.AudioContext||window.webkitAudioContext;function dAudio(){let e=null,t=null,o=!1,n=0,a=0,r=null,l=null,s=0,u=!1,i=1,d=0,c=1,p=40,f=!0;["state","load","offline","online","ready","play","pause","stop","end"].forEach(e=>this[`on${e}`]=null);const y=(e,n=0,a=null)=>{t=e,"function"==typeof this.onstate&&this.onstate({state:e,code:n,message:a}),"function"==typeof this[`on${e}`]&&this[`on${e}`](),"ready"===e&&o&&(y("autoplay"),H()),"end"===e&&u&&(y("repeat"),H())},g=new AudioContext,m=g.createGain(),b=g.createDynamicsCompressor();b.attack.value=1,b.release.value=.25;const h=g.createGain();m.connect(b).connect(h).connect(g.destination);const A=e=>{y("decode"),g.decodeAudioData(e,e=>{r=e,E()},e=>{console.log("dAudio Error:",e.message)})},v=e=>{m.gain.value=e?i:1,b.threshold.value=e?d:0,b.ratio.value=e?c:1,b.knee.value=e?p:40,f=e,console.log({n:i,t:d,r:c,k:p})};v(f);const E=()=>{y("remaster");let e=0,t=0,o=0,n=r.numberOfChannels;for(let o=0;o<n;o++)r.getChannelData(o).forEach(o=>{e+=o>0?o:-o,o>t?t=o:-o>t&&(t=-o)});o=e/(r.length/n),i=parseFloat((2-t).toFixed(2)),d=Math.floor(T(-50*(1-o),-100,0)),c=Math.ceil(T(20-20*o,1,20)),p=Math.floor(T(40-20*o,0,40)),v(!0),R(!0),y("ready")},C=()=>l.match(/^audio\/[a-z0-9]+$/),w=()=>s>0,T=(e,t,o)=>(e>o?e=o:e<t&&(e=t),e);let k=null;const x=()=>a||(n?g.currentTime-n:0),D=()=>{k.stop(),k.disconnect(m),k=null},R=(e=!1)=>{e||y("stop"),k&&D(),n=0,a=0},F=(e=!1)=>{k&&(e||y("pause"),D(),a=g.currentTime-n)},H=(e=!1)=>{!k&&r&&(e||y("play"),(k=g.createBufferSource()).connect(m),k.buffer=r,k.start(0,a),n=g.currentTime-a,a=0,k.onended=()=>{x()>=r.duration&&(R(),y("end"))})};Object.defineProperties(dAudio.prototype,{state:{enumerable:!0,get:()=>t},src:{enumerable:!0,get:()=>e,set(t){(t=>{if(y("load"),t instanceof File)y("offline"),e=t.name,l=t.type,s=t.size,C()&&w()?t.arrayBuffer().then(e=>A(e)):y("error",1,"Invalid Audio File");else if("string"==typeof t){y("online");const o=new XMLHttpRequest;o.responseType="arraybuffer",o.onreadystatechange=()=>{o.status>=400?o.abort():o.readyState===o.HEADERS_RECEIVED&&(l=o.getResponseHeader("content-type"),s=parseInt(o.getResponseHeader("content-length")),C()&&w()||o.abort())},o.onload=()=>{e=t,A(o.response)},o.onabort=()=>y("error",2,"Loading Aborted"),o.open("GET",t,!0),o.send()}})(t)}},type:{enumerable:!0,get:()=>l},size:{enumerable:!0,get:()=>s},duration:{enumerable:!0,get:()=>r?r.duration:0},currentTime:{enumerable:!0,get:()=>x(),set(e){var t;"number"==typeof e&&(t=T(e,0,this.duration),y("seek"),k?(F(!0),a=t,H(!0)):a=t)}},isPlaying:{enumerable:!0,get:()=>!!k},repeat:{enumerable:!0,get:()=>u,set(e){"boolean"==typeof e&&(u=e)}},autoplay:{enumerable:!0,get:()=>o,set(e){"boolean"==typeof e&&(o=e)}},remaster:{enumerable:!0,get:()=>f,set(e){"boolean"==typeof e&&v(e)}},volume:{enumerable:!0,get:()=>h.gain.value,set(e){"number"==typeof e&&(h.gain.value=T(e,0,1))}}}),dAudio.prototype.play=function(){H()},dAudio.prototype.pause=function(){F()},dAudio.prototype.stop=function(){R()},dAudio.prototype.playPause=function(){k?F():H()}}